const path = require('path')
const vuxLoader = require('vux-loader')

module.exports = {
  router: {
    // base: '../',
    // mode: 'hash',
    extendRoutes (routes, resolve) {
      
      routes.forEach(one => {
        const route = Object.create(one)
        route.name += '_locale'
        route.path = '*' + one.path + '/index.html'
        routes.push(route)
      })
      routes = routes.filter(one => {
        return /locale/.test(one.name)
      })
      console.log(routes)
      
    }
  },
  performance: {
    prefetch: false
  },
  head: {
    meta: [
      { charset: 'utf-8' },
      { name: 'viewport', content: 'width=device-width, initial-scale=1, user-scalable=0' }
    ]
  },
  css: [
    'vux/src/styles/reset.less',
    'vux/src/styles/1px.less'
  ],
  plugins: [
    {
      src: '~/plugins/vux-plugins',
      ssr: false
    },
    {
      src: '~/plugins/vux-components',
      ssr: true
    }
  ],
  build: {
    extend(config, { isDev, isClient }) {
      const configs = vuxLoader.merge(config, {
        options: {
          projectRoot: path.join(__dirname, '../../'),
          resolveVuxDir: '../../../src/',
          vuxDev: true,
          vuxWriteFile: true,
          ssr: true
        },
        plugins: ['vux-ui', {
          name: 'less-theme',
          path: path.join(__dirname, '../../src/theme.less')
        }, {
          name: 'i18n',
          vuxStaticReplace: true,
          staticReplace: true,
          vuxLocale: 'zh-CN',
          // extractToFiles: 'src/locales/components.yml',
          localeList: ['en', 'zh-CN']
        }]
      })
      return configs
    }
  }
}
